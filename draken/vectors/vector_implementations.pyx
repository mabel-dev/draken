# cython: language_level=3
# cython: nonecheck=False
# cython: cdivision=True
# cython: initializedcheck=False
# cython: infer_types=True
# cython: wraparound=False
# cython: boundscheck=False

"""
Auto-generated consolidated vector_implementations module.
This file is automatically generated by setup.py and includes all individual
vector implementation files in the vectors directory.

DO NOT EDIT THIS FILE MANUALLY - it will be overwritten during build.
"""

# Common imports needed across all vector implementations
import ctypes
import pyarrow
import pyarrow.compute as pc

# Cython imports
from cpython.mem cimport PyMem_Malloc
from cpython.ref cimport PyObject
from cpython cimport Py_ssize_t

# Standard C types
from libc.stdint cimport int32_t, int64_t, int8_t, intptr_t, uint32_t, uint64_t, uint8_t
from libc.stdlib cimport malloc, free
from libc.string cimport memcpy

# Draken core imports
from draken.core.buffers cimport DrakenFixedBuffer, DRAKEN_BOOL, DRAKEN_INT64, DRAKEN_FLOAT64, DRAKEN_STRING, DRAKEN_DATE32, DRAKEN_TIMESTAMP, DRAKEN_TIME
from draken.core.fixed_vector cimport alloc_fixed_buffer, buf_dtype, buf_itemsize, buf_length, free_fixed_buffer
from draken.vectors.vector cimport Vector

# NULL_HASH constant for null hash entries (defined once here to avoid redeclaration in included files)
cdef uint64_t NULL_HASH = <uint64_t>0x9e3779b97f4a7c15

include "array_vector.pyx"
include "bool_vector.pyx"
include "date32_vector.pyx"
include "float64_vector.pyx"
include "int64_vector.pyx"
include "string_vector.pyx"
include "time_vector.pyx"
include "timestamp_vector.pyx"
